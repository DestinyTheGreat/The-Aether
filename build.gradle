buildscript {
    dependencies {
        // N/A
    }
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "1.2.1"
}

JavaVersion targetVersion = JavaVersion.VERSION_16

allprojects {
    sourceCompatibility = targetVersion
    targetCompatibility = targetVersion
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }
    mavenCentral()
}

minecraft {
    accessWidener "src/main/resources/the_aether.accesswidener"
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings minecraft.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = 'UTF-8'

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    if (targetVersion.isJava9Compatible()) {
        it.options.release = Integer.parseInt(targetVersion.getMajorVersion())
    }
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

jar {
    manifest {
        attributes 'Implementation-Title': 'AetherReborn',
                'Implementation-Version': project.version,
                'Main-Class': 'com.aether.executable.InstallerGUI'
    }
    from "LICENSE.md"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
